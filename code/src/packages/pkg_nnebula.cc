//----------------------------------------------------------
// pkg_nnebula.cc
// MACHINE GENERATED, DON'T EDIT!
//----------------------------------------------------------
#include "kernel/ntypes.h"
#include "kernel/nkernelserver.h"
extern "C" bool n_init_nanimserver (nClass *, nKernelServer *);
extern "C" void n_fini_nanimserver (void);
extern "C" void *n_new_nanimserver (void);
extern "C" char *n_version_nanimserver (void);
extern "C" bool n_init_nanimcurvearray (nClass *, nKernelServer *);
extern "C" void n_fini_nanimcurvearray (void);
extern "C" void *n_new_nanimcurvearray (void);
extern "C" char *n_version_nanimcurvearray (void);
extern "C" bool n_init_ncharacterserver (nClass *, nKernelServer *);
extern "C" void n_fini_ncharacterserver (void);
extern "C" void *n_new_ncharacterserver (void);
extern "C" char *n_version_ncharacterserver (void);
extern "C" bool n_init_nnpkfileserver (nClass *, nKernelServer *);
extern "C" void n_fini_nnpkfileserver (void);
extern "C" void *n_new_nnpkfileserver (void);
extern "C" char *n_version_nnpkfileserver (void);
extern "C" bool n_init_ngfxserver (nClass *, nKernelServer *);
extern "C" void n_fini_ngfxserver (void);
extern "C" void *n_new_ngfxserver (void);
extern "C" char *n_version_ngfxserver (void);
extern "C" bool n_init_nscenegraph2 (nClass *, nKernelServer *);
extern "C" void n_fini_nscenegraph2 (void);
extern "C" void *n_new_nscenegraph2 (void);
extern "C" char *n_version_nscenegraph2 (void);
extern "C" bool n_init_nchannelserver (nClass *, nKernelServer *);
extern "C" void n_fini_nchannelserver (void);
extern "C" void *n_new_nchannelserver (void);
extern "C" char *n_version_nchannelserver (void);
extern "C" bool n_init_ntexture (nClass *, nKernelServer *);
extern "C" void n_fini_ntexture (void);
extern "C" void *n_new_ntexture (void);
extern "C" char *n_version_ntexture (void);
extern "C" bool n_init_npixelshader (nClass *, nKernelServer *);
extern "C" void n_fini_npixelshader (void);
extern "C" void *n_new_npixelshader (void);
extern "C" char *n_version_npixelshader (void);
extern "C" bool n_init_nvertexbuffer (nClass *, nKernelServer *);
extern "C" void n_fini_nvertexbuffer (void);
extern "C" void *n_new_nvertexbuffer (void);
extern "C" char *n_version_nvertexbuffer (void);
extern "C" bool n_init_nindexbuffer (nClass *, nKernelServer *);
extern "C" void n_fini_nindexbuffer (void);
extern "C" void *n_new_nindexbuffer (void);
extern "C" char *n_version_nindexbuffer (void);
extern "C" bool n_init_ninputserver (nClass *, nKernelServer *);
extern "C" void n_fini_ninputserver (void);
extern "C" void *n_new_ninputserver (void);
extern "C" char *n_version_ninputserver (void);
extern "C" bool n_init_ntclserver (nClass *, nKernelServer *);
extern "C" void n_fini_ntclserver (void);
extern "C" void *n_new_ntclserver (void);
extern "C" char *n_version_ntclserver (void);
extern "C" bool n_init_nconserver (nClass *, nKernelServer *);
extern "C" void n_fini_nconserver (void);
extern "C" void *n_new_nconserver (void);
extern "C" char *n_version_nconserver (void);
extern "C" bool n_init_nmathserver (nClass *, nKernelServer *);
extern "C" void n_fini_nmathserver (void);
extern "C" void *n_new_nmathserver (void);
extern "C" char *n_version_nmathserver (void);
extern "C" bool n_init_nblob (nClass *, nKernelServer *);
extern "C" void n_fini_nblob (void);
extern "C" void *n_new_nblob (void);
extern "C" char *n_version_nblob (void);
extern "C" bool n_init_noctree (nClass *, nKernelServer *);
extern "C" void n_fini_noctree (void);
extern "C" void *n_new_noctree (void);
extern "C" char *n_version_noctree (void);
extern "C" bool n_init_nvisnode (nClass *, nKernelServer *);
extern "C" void n_fini_nvisnode (void);
extern "C" void *n_new_nvisnode (void);
extern "C" char *n_version_nvisnode (void);
extern "C" bool n_init_nmeshnode (nClass *, nKernelServer *);
extern "C" void n_fini_nmeshnode (void);
extern "C" void *n_new_nmeshnode (void);
extern "C" char *n_version_nmeshnode (void);
extern "C" bool n_init_ntexarraynode (nClass *, nKernelServer *);
extern "C" void n_fini_ntexarraynode (void);
extern "C" void *n_new_ntexarraynode (void);
extern "C" char *n_version_ntexarraynode (void);
extern "C" bool n_init_nshadernode (nClass *, nKernelServer *);
extern "C" void n_fini_nshadernode (void);
extern "C" void *n_new_nshadernode (void);
extern "C" char *n_version_nshadernode (void);
extern "C" bool n_init_n3dnode (nClass *, nKernelServer *);
extern "C" void n_fini_n3dnode (void);
extern "C" void *n_new_n3dnode (void);
extern "C" char *n_version_n3dnode (void);
extern "C" bool n_init_njoint2 (nClass *, nKernelServer *);
extern "C" void n_fini_njoint2 (void);
extern "C" void *n_new_njoint2 (void);
extern "C" char *n_version_njoint2 (void);
extern "C" bool n_init_nlightnode (nClass *, nKernelServer *);
extern "C" void n_fini_nlightnode (void);
extern "C" void *n_new_nlightnode (void);
extern "C" char *n_version_nlightnode (void);
extern "C" bool n_init_nanimnode (nClass *, nKernelServer *);
extern "C" void n_fini_nanimnode (void);
extern "C" void *n_new_nanimnode (void);
extern "C" char *n_version_nanimnode (void);
extern "C" bool n_init_ncharacternode (nClass *, nKernelServer *);
extern "C" void n_fini_ncharacternode (void);
extern "C" void *n_new_ncharacternode (void);
extern "C" char *n_version_ncharacternode (void);
extern "C" bool n_init_nipol (nClass *, nKernelServer *);
extern "C" void n_fini_nipol (void);
extern "C" void *n_new_nipol (void);
extern "C" char *n_version_nipol (void);
extern "C" bool n_init_nmeshipol (nClass *, nKernelServer *);
extern "C" void n_fini_nmeshipol (void);
extern "C" void *n_new_nmeshipol (void);
extern "C" char *n_version_nmeshipol (void);
extern "C" bool n_init_nmeshmixer (nClass *, nKernelServer *);
extern "C" void n_fini_nmeshmixer (void);
extern "C" void *n_new_nmeshmixer (void);
extern "C" char *n_version_nmeshmixer (void);
extern "C" bool n_init_noverlayplane (nClass *, nKernelServer *);
extern "C" void n_fini_noverlayplane (void);
extern "C" void *n_new_noverlayplane (void);
extern "C" char *n_version_noverlayplane (void);
extern "C" bool n_init_nlinknode (nClass *, nKernelServer *);
extern "C" void n_fini_nlinknode (void);
extern "C" void *n_new_nlinknode (void);
extern "C" char *n_version_nlinknode (void);
extern "C" bool n_init_nfognode (nClass *, nKernelServer *);
extern "C" void n_fini_nfognode (void);
extern "C" void *n_new_nfognode (void);
extern "C" char *n_version_nfognode (void);
extern "C" bool n_init_nmeshcluster2 (nClass *, nKernelServer *);
extern "C" void n_fini_nmeshcluster2 (void);
extern "C" void *n_new_nmeshcluster2 (void);
extern "C" char *n_version_nmeshcluster2 (void);
extern "C" bool n_init_ncurvearraynode (nClass *, nKernelServer *);
extern "C" void n_fini_ncurvearraynode (void);
extern "C" void *n_new_ncurvearraynode (void);
extern "C" char *n_version_ncurvearraynode (void);
extern "C" bool n_init_nmesheffect (nClass *, nKernelServer *);
extern "C" void n_fini_nmesheffect (void);
extern "C" void *n_new_nmesheffect (void);
extern "C" char *n_version_nmesheffect (void);
extern "C" bool n_init_nmixer (nClass *, nKernelServer *);
extern "C" void n_fini_nmixer (void);
extern "C" void *n_new_nmixer (void);
extern "C" char *n_version_nmixer (void);
extern "C" bool n_init_nweighttree (nClass *, nKernelServer *);
extern "C" void n_fini_nweighttree (void);
extern "C" void *n_new_nweighttree (void);
extern "C" char *n_version_nweighttree (void);
extern "C" bool n_init_nchnsplitter (nClass *, nKernelServer *);
extern "C" void n_fini_nchnsplitter (void);
extern "C" void *n_new_nchnsplitter (void);
extern "C" char *n_version_nchnsplitter (void);
extern "C" bool n_init_nchnmodulator (nClass *, nKernelServer *);
extern "C" void n_fini_nchnmodulator (void);
extern "C" void *n_new_nchnmodulator (void);
extern "C" char *n_version_nchnmodulator (void);
extern "C" bool n_init_nchnreader (nClass *, nKernelServer *);
extern "C" void n_fini_nchnreader (void);
extern "C" void *n_new_nchnreader (void);
extern "C" char *n_version_nchnreader (void);
extern "C" bool n_init_nlenseflare (nClass *, nKernelServer *);
extern "C" void n_fini_nlenseflare (void);
extern "C" void *n_new_nlenseflare (void);
extern "C" char *n_version_nlenseflare (void);
extern "C" bool n_init_nflipflop (nClass *, nKernelServer *);
extern "C" void n_fini_nflipflop (void);
extern "C" void *n_new_nflipflop (void);
extern "C" char *n_version_nflipflop (void);
extern "C" bool n_init_nhypermixer2 (nClass *, nKernelServer *);
extern "C" void n_fini_nhypermixer2 (void);
extern "C" void *n_new_nhypermixer2 (void);
extern "C" char *n_version_nhypermixer2 (void);
extern "C" bool n_init_nsoundnode (nClass *, nKernelServer *);
extern "C" void n_fini_nsoundnode (void);
extern "C" void *n_new_nsoundnode (void);
extern "C" char *n_version_nsoundnode (void);
extern "C" bool n_init_nlistenernode (nClass *, nKernelServer *);
extern "C" void n_fini_nlistenernode (void);
extern "C" void *n_new_nlistenernode (void);
extern "C" char *n_version_nlistenernode (void);
extern "C" bool n_init_nthreshnode (nClass *, nKernelServer *);
extern "C" void n_fini_nthreshnode (void);
extern "C" void *n_new_nthreshnode (void);
extern "C" char *n_version_nthreshnode (void);
extern "C" bool n_init_nobserver (nClass *, nKernelServer *);
extern "C" void n_fini_nobserver (void);
extern "C" void *n_new_nobserver (void);
extern "C" char *n_version_nobserver (void);
extern "C" bool n_init_nspecialfxserver (nClass *, nKernelServer *);
extern "C" void n_fini_nspecialfxserver (void);
extern "C" void *n_new_nspecialfxserver (void);
extern "C" char *n_version_nspecialfxserver (void);
extern "C" bool n_init_naudioserver2 (nClass *, nKernelServer *);
extern "C" void n_fini_naudioserver2 (void);
extern "C" void *n_new_naudioserver2 (void);
extern "C" char *n_version_naudioserver2 (void);
extern "C" bool n_init_nscriptlet (nClass *, nKernelServer *);
extern "C" void n_fini_nscriptlet (void);
extern "C" void *n_new_nscriptlet (void);
extern "C" char *n_version_nscriptlet (void);
extern "C" bool n_init_ntclscriptlet (nClass *, nKernelServer *);
extern "C" void n_fini_ntclscriptlet (void);
extern "C" void *n_new_ntclscriptlet (void);
extern "C" char *n_version_ntclscriptlet (void);
extern "C" bool n_init_nstream (nClass *, nKernelServer *);
extern "C" void n_fini_nstream (void);
extern "C" void *n_new_nstream (void);
extern "C" char *n_version_nstream (void);
extern "C" bool n_init_nwavstream (nClass *, nKernelServer *);
extern "C" void n_fini_nwavstream (void);
extern "C" void *n_new_nwavstream (void);
extern "C" char *n_version_nwavstream (void);
extern "C" bool n_init_noggstream (nClass *, nKernelServer *);
extern "C" void n_fini_noggstream (void);
extern "C" void *n_new_noggstream (void);
extern "C" char *n_version_noggstream (void);
extern "C" bool n_init_nshadowserver (nClass *, nKernelServer *);
extern "C" void n_fini_nshadowserver (void);
extern "C" void *n_new_nshadowserver (void);
extern "C" char *n_version_nshadowserver (void);
extern "C" bool n_init_nsbufshadowserver (nClass *, nKernelServer *);
extern "C" void n_fini_nsbufshadowserver (void);
extern "C" void *n_new_nsbufshadowserver (void);
extern "C" char *n_version_nsbufshadowserver (void);
extern "C" bool n_init_nshadowcaster (nClass *, nKernelServer *);
extern "C" void n_fini_nshadowcaster (void);
extern "C" void *n_new_nshadowcaster (void);
extern "C" char *n_version_nshadowcaster (void);
extern "C" bool n_init_nshadowcontrol (nClass *, nKernelServer *);
extern "C" void n_fini_nshadowcontrol (void);
extern "C" void *n_new_nshadowcontrol (void);
extern "C" char *n_version_nshadowcontrol (void);
extern "C" bool n_init_nprofileserver (nClass *, nKernelServer *);
extern "C" void n_fini_nprofileserver (void);
extern "C" void *n_new_nprofileserver (void);
extern "C" char *n_version_nprofileserver (void);
extern "C" bool n_init_nbumpmeshnode (nClass *, nKernelServer *);
extern "C" void n_fini_nbumpmeshnode (void);
extern "C" void *n_new_nbumpmeshnode (void);
extern "C" char *n_version_nbumpmeshnode (void);
extern "C" bool n_init_nbinscriptserver (nClass *, nKernelServer *);
extern "C" void n_fini_nbinscriptserver (void);
extern "C" void *n_new_nbinscriptserver (void);
extern "C" char *n_version_nbinscriptserver (void);
extern "C" bool n_init_nvariableserver (nClass *, nKernelServer *);
extern "C" void n_fini_nvariableserver (void);
extern "C" void *n_new_nvariableserver (void);
extern "C" char *n_version_nvariableserver (void);
extern "C" bool n_init_nprimitiveserver (nClass *, nKernelServer *);
extern "C" void n_fini_nprimitiveserver (void);
extern "C" void *n_new_nprimitiveserver (void);
extern "C" char *n_version_nprimitiveserver (void);
#ifndef __MACOSX__
extern "C" void N_EXPORT n_addmodules(nKernelServer *);
extern "C" void N_EXPORT n_remmodules(nKernelServer *);
void N_EXPORT n_addmodules(nKernelServer *ks)
#else
extern "C" void N_EXPORT nnebula_addmodules(nKernelServer *);
extern "C" void N_EXPORT nnebula_remmodules(nKernelServer *);
void N_EXPORT nnebula_addmodules(nKernelServer *ks)
#endif
{
    ks->AddModule("nanimserver",n_init_nanimserver,n_fini_nanimserver,n_new_nanimserver);
    ks->AddModule("nanimcurvearray",n_init_nanimcurvearray,n_fini_nanimcurvearray,n_new_nanimcurvearray);
    ks->AddModule("ncharacterserver",n_init_ncharacterserver,n_fini_ncharacterserver,n_new_ncharacterserver);
    ks->AddModule("nnpkfileserver",n_init_nnpkfileserver,n_fini_nnpkfileserver,n_new_nnpkfileserver);
    ks->AddModule("ngfxserver",n_init_ngfxserver,n_fini_ngfxserver,n_new_ngfxserver);
    ks->AddModule("nscenegraph2",n_init_nscenegraph2,n_fini_nscenegraph2,n_new_nscenegraph2);
    ks->AddModule("nchannelserver",n_init_nchannelserver,n_fini_nchannelserver,n_new_nchannelserver);
    ks->AddModule("ntexture",n_init_ntexture,n_fini_ntexture,n_new_ntexture);
    ks->AddModule("npixelshader",n_init_npixelshader,n_fini_npixelshader,n_new_npixelshader);
    ks->AddModule("nvertexbuffer",n_init_nvertexbuffer,n_fini_nvertexbuffer,n_new_nvertexbuffer);
    ks->AddModule("nindexbuffer",n_init_nindexbuffer,n_fini_nindexbuffer,n_new_nindexbuffer);
    ks->AddModule("ninputserver",n_init_ninputserver,n_fini_ninputserver,n_new_ninputserver);
    ks->AddModule("ntclserver",n_init_ntclserver,n_fini_ntclserver,n_new_ntclserver);
    ks->AddModule("nconserver",n_init_nconserver,n_fini_nconserver,n_new_nconserver);
    ks->AddModule("nmathserver",n_init_nmathserver,n_fini_nmathserver,n_new_nmathserver);
    ks->AddModule("nblob",n_init_nblob,n_fini_nblob,n_new_nblob);
    ks->AddModule("noctree",n_init_noctree,n_fini_noctree,n_new_noctree);
    ks->AddModule("nvisnode",n_init_nvisnode,n_fini_nvisnode,n_new_nvisnode);
    ks->AddModule("nmeshnode",n_init_nmeshnode,n_fini_nmeshnode,n_new_nmeshnode);
    ks->AddModule("ntexarraynode",n_init_ntexarraynode,n_fini_ntexarraynode,n_new_ntexarraynode);
    ks->AddModule("nshadernode",n_init_nshadernode,n_fini_nshadernode,n_new_nshadernode);
    ks->AddModule("n3dnode",n_init_n3dnode,n_fini_n3dnode,n_new_n3dnode);
    ks->AddModule("njoint2",n_init_njoint2,n_fini_njoint2,n_new_njoint2);
    ks->AddModule("nlightnode",n_init_nlightnode,n_fini_nlightnode,n_new_nlightnode);
    ks->AddModule("nanimnode",n_init_nanimnode,n_fini_nanimnode,n_new_nanimnode);
    ks->AddModule("ncharacternode",n_init_ncharacternode,n_fini_ncharacternode,n_new_ncharacternode);
    ks->AddModule("nipol",n_init_nipol,n_fini_nipol,n_new_nipol);
    ks->AddModule("nmeshipol",n_init_nmeshipol,n_fini_nmeshipol,n_new_nmeshipol);
    ks->AddModule("nmeshmixer",n_init_nmeshmixer,n_fini_nmeshmixer,n_new_nmeshmixer);
    ks->AddModule("noverlayplane",n_init_noverlayplane,n_fini_noverlayplane,n_new_noverlayplane);
    ks->AddModule("nlinknode",n_init_nlinknode,n_fini_nlinknode,n_new_nlinknode);
    ks->AddModule("nfognode",n_init_nfognode,n_fini_nfognode,n_new_nfognode);
    ks->AddModule("nmeshcluster2",n_init_nmeshcluster2,n_fini_nmeshcluster2,n_new_nmeshcluster2);
    ks->AddModule("ncurvearraynode",n_init_ncurvearraynode,n_fini_ncurvearraynode,n_new_ncurvearraynode);
    ks->AddModule("nmesheffect",n_init_nmesheffect,n_fini_nmesheffect,n_new_nmesheffect);
    ks->AddModule("nmixer",n_init_nmixer,n_fini_nmixer,n_new_nmixer);
    ks->AddModule("nweighttree",n_init_nweighttree,n_fini_nweighttree,n_new_nweighttree);
    ks->AddModule("nchnsplitter",n_init_nchnsplitter,n_fini_nchnsplitter,n_new_nchnsplitter);
    ks->AddModule("nchnmodulator",n_init_nchnmodulator,n_fini_nchnmodulator,n_new_nchnmodulator);
    ks->AddModule("nchnreader",n_init_nchnreader,n_fini_nchnreader,n_new_nchnreader);
    ks->AddModule("nlenseflare",n_init_nlenseflare,n_fini_nlenseflare,n_new_nlenseflare);
    ks->AddModule("nflipflop",n_init_nflipflop,n_fini_nflipflop,n_new_nflipflop);
    ks->AddModule("nhypermixer2",n_init_nhypermixer2,n_fini_nhypermixer2,n_new_nhypermixer2);
    ks->AddModule("nsoundnode",n_init_nsoundnode,n_fini_nsoundnode,n_new_nsoundnode);
    ks->AddModule("nlistenernode",n_init_nlistenernode,n_fini_nlistenernode,n_new_nlistenernode);
    ks->AddModule("nthreshnode",n_init_nthreshnode,n_fini_nthreshnode,n_new_nthreshnode);
    ks->AddModule("nobserver",n_init_nobserver,n_fini_nobserver,n_new_nobserver);
    ks->AddModule("nspecialfxserver",n_init_nspecialfxserver,n_fini_nspecialfxserver,n_new_nspecialfxserver);
    ks->AddModule("naudioserver2",n_init_naudioserver2,n_fini_naudioserver2,n_new_naudioserver2);
    ks->AddModule("nscriptlet",n_init_nscriptlet,n_fini_nscriptlet,n_new_nscriptlet);
    ks->AddModule("ntclscriptlet",n_init_ntclscriptlet,n_fini_ntclscriptlet,n_new_ntclscriptlet);
    ks->AddModule("nstream",n_init_nstream,n_fini_nstream,n_new_nstream);
    ks->AddModule("nwavstream",n_init_nwavstream,n_fini_nwavstream,n_new_nwavstream);
    ks->AddModule("noggstream",n_init_noggstream,n_fini_noggstream,n_new_noggstream);
    ks->AddModule("nshadowserver",n_init_nshadowserver,n_fini_nshadowserver,n_new_nshadowserver);
    ks->AddModule("nsbufshadowserver",n_init_nsbufshadowserver,n_fini_nsbufshadowserver,n_new_nsbufshadowserver);
    ks->AddModule("nshadowcaster",n_init_nshadowcaster,n_fini_nshadowcaster,n_new_nshadowcaster);
    ks->AddModule("nshadowcontrol",n_init_nshadowcontrol,n_fini_nshadowcontrol,n_new_nshadowcontrol);
    ks->AddModule("nprofileserver",n_init_nprofileserver,n_fini_nprofileserver,n_new_nprofileserver);
    ks->AddModule("nbumpmeshnode",n_init_nbumpmeshnode,n_fini_nbumpmeshnode,n_new_nbumpmeshnode);
    ks->AddModule("nbinscriptserver",n_init_nbinscriptserver,n_fini_nbinscriptserver,n_new_nbinscriptserver);
    ks->AddModule("nvariableserver",n_init_nvariableserver,n_fini_nvariableserver,n_new_nvariableserver);
    ks->AddModule("nprimitiveserver",n_init_nprimitiveserver,n_fini_nprimitiveserver,n_new_nprimitiveserver);
}
#ifndef __MACOSX__
void N_EXPORT n_remmodules(nKernelServer *)
#else
void N_EXPORT nnebula_remmodules(nKernelServer *)
#endif
{
}
//----------------------------------------------------------
// EOF
//----------------------------------------------------------
